#!/usr/bin/env bash
#
# ############################################################################
# Project: bin (none)
# File...: xSHELL/xshell.lib
# Created: Sunday, 2022/02/20 - 18:44:18
# Author.: @fbnmtz, fgm (devel.fgm@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Monday, 2023/01/30 - 02:45:14
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.1.3.85
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#
_xLIB_XSHELL_=true

# fill author name
for name in "$(git config author.name)" "$USER" '<unknow>' ; do
    if [ -z "$author_name" ]; then
        author_name="$name"
    else
        break
    fi 
done

# fill author email
for email in "$(git config author.email)" "$USER" '<unknow>' ; do
    if [ -z "$author_mail" ]; then
        author_mail="$email"
    else
        break
    fi 
done

templateHeader(){
    # get current date/time (force locale to US format on date)
    export LC_TIME=en_US.UTF-8 2>/dev/null
    today=$(date "+%A, %Y/%m/%d - %H:%M:%S")
    # print default header template
    echo -e "#
# ############################################################################
# Project: ~/bin
# File...: $(echo $filename | rev | cut -d '/' -f1 | rev)
# Created: $today
# Author.: $author_name, ($author_mail)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: $today
# Modified By..: $author_name, ($author_mail)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.0.1.0
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#"
}

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
# shellcheck disable=SC1090,SC2154
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
templateScript(){
    echo -e "
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
# shellcheck disable=SC1090,SC2154
#   * SC1090: Can't follow non-constant source. Use a directive to specify location.
#       -> cant follow or source usage
#   * SC2154: var is referenced but not assigned.
#       -> variables created by or library system (don't worry)

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
source ~/bin/xSHELL/init
use args
# xrequirements some_binary

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
xarg --id -p,--print   --code \"echo 'test prints'\" --desc \"print some code\"
xarg --id -s,--sum     --var expression+r          --desc \"expression to sum\"

# xrun function will validate the arguments defined above
xrun --xreject-unknow --xrequire-one \"\$@\"

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
# case \"\$action\" in
#     version) echo -e \"\${VERSION}\" ;;
#     help)    echo -e \"action:\$action\"; usage ;;
# esac
"
}

templateLib(){
    # replace '.' for '_'
    local name=${1//./_}
    # remove word 'lib' from filename
    name=${name//lib/}
    # convert lib name to upercase {^^}
    echo -e  "\n_xLIB_${name^^}_=true\n"
}