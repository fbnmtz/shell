#!/usr/bin/env bash
#
# ############################################################################
# Project: xshell (none)
# File...: lib/system
# Created: Thursday, 2023/01/05 - 21:11:59
# Author.: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Saturday, 2023/01/14 - 01:15:14
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.0.4.305
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#
#!/usr/bin/bash

source ~/bin/lib/init

_xLIB_SYSTEM_=true

# use args utils

_OS_=$(uname)
_NOTIFY_APP=''
_NOTIFY_ARG=''

# return current OS
System.OS(){
    echo "${_OS_}"
}
sys.os(){ System.OS "$@"; }

# call system notifyer
System.notification(){
    local title="$1" 
    local text="$2" 
    local level="$3";

    echo -e "\nsys.notify: title: $title; text:$text; level:$level\n";
    
    # case sys.os in
    case $(sys.os) in
        Darwin) 
            _NOTIFY_APP="osascript -e"
            _NOTIFY_ARG="\"display notification \\\"<text>\\\" with title \\\"<title>\\\"\""
            _NOTIFY_ARG=$(echo -e $_NOTIFY_ARG | sed "s/<text>/$text/" | sed "s/<title>/$title/")
        ;;
        Linux)  
            _NOTIFY_APP="notify-send"
            _NOTIFY_ARG="\"$title\" \"$text\""
            [ "$level" == "-c" ] && _NOTIFY_ARG+=' -u critical'

        ;;
    esac
    echo -e "\ncmd: $_NOTIFY_APP $_NOTIFY_ARG\n"
    eval "$_NOTIFY_APP $_NOTIFY_ARG"
}
sys.notify(){ System.notification "$@"; }

# write contents on terminal
System.write(){
    echo "$@"
}
sys.write(){ System.write "$@"; }

# manage System volume
System.volume(){
    # user param
    action=$1

    # test actions
    [ "$action" == '--up'     ] && action="+"
    [ "$action" == '--down'   ] && action="-"
    # ----------------------------------------------------------------
    
    case $(sys.os) in
        Darwin) 
            _VOL_APP="verificar no macos"
            _VOL_ARG="args do macos"
            # _VOL_ARG=$(echo -e $_VOL_ARG | sed "s/<text>/$text/" | sed "s/<title>/$title/")
        ;;
        Linux)  
            _VOL_APP="amixer"
            _VOL_ARG="-q sset Master 5%$action"
            if [ "$action" == '--status' ] ; then
                 current_volume=$(amixer cget name="Master Playback Volume" | tail -n1 | cut -d '=' -f2 | cut -d ',' -f1)
                _VOL_APP=calcVol
                _VOL_ARG="$current_volume"
            fi

        ;;
    esac
# 
    # echo -e "volume: $($_VOL_APP $_VOL_ARG)"
    eval "$_VOL_APP $_VOL_ARG"
    
}
sys.vol(){ System.volume "$@"; }

calcVol(){
    local val=$1
    local max=62259
#    echo $(( $val/$max*100 ))
#    echo $(( $val/$max*100 ))
   echo "$val/$max*100" | bc -l | cut -d '.' -f1
}